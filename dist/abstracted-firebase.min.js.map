{"version":3,"file":"abstracted-firebase.min.js","sources":["../lib/db.js","../node_modules/firebase-api-surface/lib/rtdb.js","../node_modules/firebase-api-surface/lib/storage.js","../node_modules/firebase-api-surface/lib/firestore.js","../node_modules/firebase-api-surface/lib/messaging.js","../node_modules/firebase-api-surface/lib/app.js","../node_modules/firebase-api-surface/lib/auth.js","../node_modules/firebase-api-surface/lib/index.js","../lib/index.js"],"sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst convert = require(\"typed-conversions\");\nconst serialized_query_1 = require(\"serialized-query\");\nconst util_1 = require(\"./util\");\nconst firemock_1 = require(\"firemock\");\nconst FileDepthExceeded_1 = require(\"./errors/FileDepthExceeded\");\nconst UndefinedAssignment_1 = require(\"./errors/UndefinedAssignment\");\nvar FirebaseBoolean;\n(function (FirebaseBoolean) {\n    FirebaseBoolean[FirebaseBoolean[\"true\"] = 1] = \"true\";\n    FirebaseBoolean[FirebaseBoolean[\"false\"] = 0] = \"false\";\n})(FirebaseBoolean = exports.FirebaseBoolean || (exports.FirebaseBoolean = {}));\nclass RealTimeDB {\n    constructor(config = {}) {\n        this._waitingForConnection = [];\n        this._onConnected = [];\n        this._onDisconnected = [];\n        this._debugging = false;\n        this._mocking = false;\n        this._allowMocking = false;\n        if (config.mocking) {\n            this._mocking = true;\n            this._mock = new firemock_1.Mock();\n        }\n    }\n    query(path) {\n        return serialized_query_1.SerializedQuery.path(path);\n    }\n    ref(path) {\n        return this._mocking\n            ? this.mock.ref(path)\n            : RealTimeDB.connection.ref(path);\n    }\n    allowMocking() {\n        this._allowMocking = true;\n    }\n    get mock() {\n        if (!this._mocking && !this._allowMocking) {\n            throw new Error(\"You can not mock the database without setting mocking in the constructor\");\n        }\n        if (!this._mock) {\n            this._mock = new firemock_1.Mock();\n            firemock_1.resetDatabase();\n        }\n        return this._mock;\n    }\n    resetMockDb() {\n        firemock_1.resetDatabase();\n    }\n    waitForConnection() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (RealTimeDB.isConnected) {\n                return Promise.resolve();\n            }\n            return new Promise(resolve => {\n                const cb = () => {\n                    resolve();\n                };\n                this._waitingForConnection.push(cb);\n            });\n        });\n    }\n    get isConnected() {\n        return RealTimeDB.isConnected;\n    }\n    set(path, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return this.ref(path).set(value);\n            }\n            catch (e) {\n                if (e.message.indexOf(\"path specified exceeds the maximum depth that can be written\") !== -1) {\n                    console.log(\"FILE DEPTH EXCEEDED\");\n                    throw new FileDepthExceeded_1.default(e);\n                }\n                if (e.name === \"Error\") {\n                    e.name = \"AbstractedFirebaseSetError\";\n                }\n                if (e.message.indexOf(\"First argument contains undefined in property\") !== -1) {\n                    e.name = \"FirebaseUndefinedValueAssignment\";\n                    throw new UndefinedAssignment_1.default(e);\n                }\n                throw e;\n            }\n        });\n    }\n    multiPathSet(base) {\n        const mps = [];\n        const ref = this.ref.bind(this);\n        let callback;\n        const api = {\n            _basePath: base || \"/\",\n            basePath(path) {\n                if (path === undefined) {\n                    return api._basePath;\n                }\n                api._basePath = path;\n                return api;\n            },\n            add(pathValue) {\n                const exists = new Set(api.paths);\n                if (pathValue.path.indexOf(\"/\") === -1) {\n                    pathValue.path = \"/\" + pathValue.path;\n                }\n                if (exists.has(pathValue.path)) {\n                    const e = new Error(`You have attempted to add the path \"${pathValue.path}\" twice.`);\n                    e.code = \"duplicate-path\";\n                    throw e;\n                }\n                mps.push(pathValue);\n                return api;\n            },\n            get paths() {\n                return mps.map(i => i.path);\n            },\n            callback(cb) {\n                callback = cb;\n                return;\n            },\n            execute() {\n                return __awaiter(this, void 0, void 0, function* () {\n                    const updateHash = {};\n                    mps.map(item => {\n                        updateHash[item.path] = item.value;\n                    });\n                    return ref(api.basePath)\n                        .update(updateHash)\n                        .then(() => {\n                        if (callback) {\n                            callback(null, mps);\n                            return;\n                        }\n                    })\n                        .catch((e) => {\n                        if (callback) {\n                            callback(e, mps);\n                        }\n                        throw e;\n                    });\n                });\n            }\n        };\n        return api;\n    }\n    update(path, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return this.ref(path).update(value);\n            }\n            catch (e) {\n                if (e.name === \"Error\") {\n                    e.name = \"AbstractedFirebaseUpdateError\";\n                }\n                if (e.message.indexOf(\"First argument path specified exceeds the maximum depth\") !==\n                    -1) {\n                    e.name = \"AbstractedFirebaseUpdateDepthError\";\n                }\n                throw e;\n            }\n        });\n    }\n    remove(path, ignoreMissing = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const ref = this.ref(path);\n            return ref.remove().catch((e) => {\n                if (ignoreMissing && e.message.indexOf(\"key is not defined\") !== -1) {\n                    return Promise.resolve();\n                }\n                this.handleError(e, \"remove\", `attempt to remove ${path} failed: `);\n            });\n        });\n    }\n    getSnapshot(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return typeof path === \"string\"\n                ? this.ref(util_1.slashNotation(path)).once(\"value\")\n                : path.setDB(this).execute();\n        });\n    }\n    getValue(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const snap = yield this.getSnapshot(path);\n            return snap.val();\n        });\n    }\n    getRecord(path, idProp = \"id\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getSnapshot(path).then(snap => {\n                let object = snap.val();\n                if (typeof object !== \"object\") {\n                    object = { value: snap.val() };\n                }\n                return Object.assign({}, object, { [idProp]: snap.key });\n            });\n        });\n    }\n    getList(path, idProp = \"id\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getSnapshot(path).then(snap => {\n                return snap.val() ? convert.snapshotToArray(snap, idProp) : [];\n            });\n        });\n    }\n    getSortedList(query, idProp = \"id\") {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getSnapshot(query).then(snap => {\n                return convert.snapshotToArray(snap, idProp);\n            });\n        });\n    }\n    push(path, value) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ref(path).push(value);\n        });\n    }\n    exists(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.getSnapshot(path).then(snap => (snap.val() ? true : false));\n        });\n    }\n    handleError(e, name, message = \"\") {\n        console.error(`Error ${message}:`, e);\n        return Promise.reject({\n            code: `firebase/${name}`,\n            message: message + e.message || e\n        });\n    }\n}\nRealTimeDB.isConnected = false;\nRealTimeDB.isAuthorized = false;\nexports.RealTimeDB = RealTimeDB;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\n// import { Reference } from \"@firebase/storage-types\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// export interface IReference extends Reference {\n//   getMetadata<T = any>(): Promise<T>;\n//   getDownloadURL(): Promise<string>;\n// }\n// export {\n//   FullMetadata as IFullMetadata,\n//   SettableMetadata as ISettableMetadata,\n//   UploadMetadata as IUploadMetadata,\n//   UploadTask as IUploadTask,\n//   UploadTaskSnapshot as IUploadTaskSnapshot\n// } from \"@firebase/storage-types\";\nexports.NOT_DONE = true;\n","\"use strict\";\n// export {\n//   DocumentData,\n//   UpdateData,\n//   LogLevel,\n//   Settings as IClientSettings,\n//   GeoPoint,\n//   Blob,\n//   Transaction,\n//   WriteBatch,\n//   DocumentListenOptions as IDocumentListenOptions,\n//   SetOptions as ISetOptions,\n//   DocumentReference,\n//   SnapshotOptions as ISnapshotOptions,\n//   SnapshotMetadata as ISnapshotMetadata,\n//   DocumentSnapshot,\n//   QueryDocumentSnapshot,\n//   OrderByDirection,\n//   WhereFilterOp,\n//   QueryListenOptions as IQueryListenOptions,\n//   Query,\n//   QuerySnapshot,\n//   DocumentChangeType,\n//   DocumentChange as IDocumentChange,\n//   CollectionReference,\n//   FieldValue,\n//   FieldPath,\n//   FirestoreErrorCode,\n//   FirestoreError as IFirestoreError\n// } from \"@firebase/firestore-types\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// export { FirebaseMessaging } from \"@firebase/messaging-types\";\nexports.NotYetDone = true;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// export {\n//   User as IUser,\n//   UserInfo as IUserInfo,\n//   ActionCodeInfo as IActionCodeInfo,\n//   ActionCodeSettings,\n//   AdditionalUserInfo,\n//   ApplicationVerifier as IApplicationVerifier,\n//   AuthCredential as IAuthCredential,\n//   AuthProvider as IAuthProvider,\n//   ConfirmationResult as IConfirmationResult,\n//   EmailAuthProvider,\n//   FacebookAuthProvider,\n//   GithubAuthProvider,\n//   GoogleAuthProvider,\n//   OAuthProvider,\n//   PhoneAuthProvider,\n//   RecaptchaVerifier,\n//   TwitterAuthProvider,\n//   UserCredential,\n//   UserMetadata,\n//   Persistence,\n//   OAuthCredential as IOauthCredential,\n//   FirebaseAuth\n// } from \"@firebase/auth-types\";\nexports.NOT_DONE = true;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst rtdb = require(\"./rtdb\");\nexports.rtdb = rtdb;\nconst storage = require(\"./storage\");\nexports.storage = storage;\nconst firestore = require(\"./firestore\");\nexports.firestore = firestore;\nconst messaging = require(\"./messaging\");\nexports.messaging = messaging;\nconst app = require(\"./app\");\nexports.app = app;\nconst auth = require(\"./auth\");\nexports.auth = auth;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst db_1 = require(\"./db\");\nexports.default = db_1.RealTimeDB;\nvar db_2 = require(\"./db\");\nexports.RealTimeDB = db_2.RealTimeDB;\nexports.FirebaseBoolean = db_2.FirebaseBoolean;\nvar firebase_api_surface_1 = require(\"firebase-api-surface\");\nexports.rtdb = firebase_api_surface_1.rtdb;\nexports.auth = firebase_api_surface_1.auth;\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","next","e","rejected","step","result","done","then","apply","Object","defineProperty","exports","convert","require","serialized_query_1","util_1","firemock_1","FileDepthExceeded_1","UndefinedAssignment_1","FirebaseBoolean","RealTimeDB","config","_waitingForConnection","_onConnected","_onDisconnected","_debugging","_mocking","_allowMocking","mocking","_mock","Mock","path","SerializedQuery","this","mock","ref","connection","resetDatabase","isConnected","push","set","message","indexOf","log","default","name","base","callback","mps","bind","api","undefined","_basePath","pathValue","exists","Set","paths","has","Error","code","map","i","cb","updateHash","item","basePath","update","catch","ignoreMissing","remove","handleError","slashNotation","once","setDB","execute","getSnapshot","val","idProp","object","snap","_typeof","assign","key","snapshotToArray","query","error","isAuthorized","rtdb","storage","firestore","messaging","app","auth","db_1","db_2","firebase_api_surface_1"],"mappings":"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"}